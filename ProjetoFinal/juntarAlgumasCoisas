import PySimpleGUI as sg
import json

with open("dataset.json", encoding='utf-8') as dataset:
    populacao = json.load(dataset)

populacao = populacao["pessoas"]
#aux = []
#for pessoa in populacao["pessoas"]:
#    aux.append(pessoa)
#populacao = aux
nomes = []
for pessoa in populacao:
    nomes.append(pessoa["nome"])
nomes = sorted(nomes)


sg.theme("DarkBrown3")

#menu inicial
menuInicial = [ 
    [sg.Text("Estudo da População", font=('Arial', 36))],
    [sg.Text("MENU", font=('Arial', 36))],
    [sg.Text("Inserir Utilizador:", size=(15,1)),sg.Button("OK1")],
    [sg.Text("Procurar Utilizador:", size=(15,1)), sg.Button("OK2")],
    [sg.Text("Listar Indivíduos:", size=(15,1)), sg.Button("OK3")],
    [sg.Text("Pesquisa Por:", size=(15,1)), sg.Button("OK4")],
    [sg.Text("Menu Estatístico:", size=(15,1)), sg.Button("OK5")],
    [sg.Button("Sair")]
]
janelaMenuInicial = sg.Window("Projeto de ATP", menuInicial, location=(300,150), font=('Arial', 24))

# inserir utilizador
inserirUtilizadorEsquerda = [
    [sg.Text("Introdução de Utilizador", font=('Arial', 36))],
    [sg.Text("Nome:",font=(20), size=(15,1)),sg.InputText(key="-NOME-",size=(20))],
    [sg.Text("Idade:",font=(20), size=(15,1)),sg.InputText(key='-IDADE-',size=(20))],
    [sg.Text("Género:",font=(20), size=(8,1)), sg.Radio("Masculino","sexo",default=True),
            sg.Radio("Feminino","sexo"),
            sg.Radio("Outro","sexo")],
    [sg.Text("Morada", font=('Arial', 15))],
    [sg.Text("Localidade:",font=(20), size=(15,1)),sg.InputText(key='-LOCALIDADE-',size=(20))],
    [sg.Text("Distrito:",font=(20), size=(15,1)),sg.InputText(key='-DISTRITO-',size=(20))],
    [sg.Text("Nº CC/BI:",font=(20), size=(15,1)),sg.InputText(key='-CCBI-',size=(20))],
    [sg.Text("Descrição:",font=(20), size=(15,1)),sg.InputText(key='-DESCRICAO-',size=(20))],
    [sg.Text("Profissão:",font=(20), size=(15,1)),sg.InputText(key='-PROFISSAO-',size=(20))],
    [sg.Text("Partido Político", font=('Arial', 15))],  
    [sg.Text("Nome por Extenso:",font=(20), size=(15,1)),sg.InputText(key='-EXTENSO-',size=(20))],
    [sg.Text("Sigla:",font=(20), size=(15,1)),sg.InputText(key='-SIGLA-',size=(20))],
    [sg.Text("Religião:",font=(20), size=(15,1)),sg.InputText(key='-RELIGIAO-',size=(20))],
    [sg.Text("Desportos Praticados:",font=(20), size=(15,1)),sg.InputText(key='-DESPORTOS-',size=(20))],
]
inserirUtilizadorDireita = [
    [sg.Text("Celebridades Favoritas:0",font=(20), size=(15,1)),sg.InputText(key='-CELEBRIDADE-',size=(20))],
    [sg.Text("Marca Carro:",font=(20), size=(15,1)),sg.InputText(key='-CARRO-',size=(20))],
    [sg.Text("Destino Favorito:",font=(20), size=(15,1)),sg.InputText(key='-DESTINOS-',size=(20))],
    [sg.Text("Animais Favoritos:",font=(20), size=(15,1)),sg.InputText(key='-ANIMAIS-',size=(20))],
    [sg.Text("Atributos", font=('Arial', 15))],
        [sg.Text("Fuma?:",font=(20), size=(15,1)), sg.Radio("Sim","fuma",default=True),
            sg.Radio("Não","fuma")],
        [sg.Text("Gosta de cinema?:",font=(20), size=(15,1)), sg.Radio("Sim","cinema",default=True),
            sg.Radio("Não","cinema")],
        [sg.Text("Gosta de viajar?:",font=(20), size=(15,1)), sg.Radio("Sim","viagem",default=True),
            sg.Radio("Não","viagem")],
        [sg.Text("Acorda cedo?:",font=(20), size=(15,1)), sg.Radio("Sim","acordarcedo",default=True),
            sg.Radio("Não","acordarcedo")],
        [sg.Text("Gosta de ler?:",font=(20), size=(15,1)), sg.Radio("Sim","ler",default=True),
            sg.Radio("Não","ler")],
        [sg.Text("Gosta de música?:",font=(20), size=(15,1)), sg.Radio("Sim","musica",default=True),
            sg.Radio("Não","musica")],
        [sg.Text("Gosta de comer?:",font=(20), size=(15,1)), sg.Radio("Sim","comer",default=True),
            sg.Radio("Não","comer")],
        [sg.Text("Gosta de dançar?:",font=(20), size=(15,1)), sg.Radio("Sim","dancar",default=True),
            sg.Radio("Não","dancar")],
        [sg.Text("Gosta de animais de estimação?:",font=(20), size=(15,1)), sg.Radio("Sim","pets",default=True),
            sg.Radio("Não","pets")],
    [sg.Text("Comida Favorita:",font=(20), size=(15,1)),sg.InputText(key='-COMIDA-',size=(20))]
]
inserirUtilizador = [
    [sg.Col(inserirUtilizadorEsquerda, p=0), sg.Col(inserirUtilizadorDireita, p=0)],
    [sg.Button("Submeter"),sg.Button("Voltar"),sg.Button("Sair")]
]
janelaInserirUtilizador = sg.Window("Projeto de ATP", inserirUtilizador, location=(100,0), font=('Arial', 24))

#operacao inserir utilizador invalida
operacaoInvalida = [ 
    [sg.Text("Operação inválida", font=('Arial', 36))],
    [sg.Text("Os campos NOME,IDADE,LOCALIDADE,DISTRITO,CCBI e PROFISSAO tem que estar preenchidos.", font=('Arial', 20))],
    [sg.Button("Voltar")],
    [sg.Button("Sair")]
]


janelaOperacaoInvalida = sg.Window("Projeto de ATP", operacaoInvalida, location=(150,200), font=('Arial', 24))

#procurar utilizador

procurarUtilizador = [
    [sg.Text("Introdução de Utilizador", font=('Arial', 36))],
    [sg.Text("Pesquisa por Nome:", size=(18,1)),sg.Button("Nome")],
    [sg.Text("Pesquisa por Nº CC/BI:", size=(18,1)),sg.Button("CC/BI")],
    [sg.Button("Voltar"),sg.Button("Sair")]
]

janelaProcurarUtilizador = sg.Window("Projeto de ATP", procurarUtilizador, location=(300,150), font=('Arial', 24))

procurarNome = [
    [sg.Text("Nome:", size=(18,1)),sg.InputText(key='-PROCURARNOME-',size=(20))],
    [sg.Button("Submeter"),sg.Button("Voltar"),sg.Button("Sair")]
]
janelaProcurarNome = sg.Window("Projeto de ATP", procurarNome, location=(300,150), font=('Arial', 24))

procurarCCBI = [
    [sg.Text("Número do CC/BI:", size=(18,1)),sg.InputText(key='-PROCURARCCBI-',size=(20))],
    [sg.Button("Submeter"),sg.Button("Voltar"),sg.Button("Sair")]
]
janelaProcurarCCBI = sg.Window("Projeto de ATP", procurarCCBI, location=(300,150), font=('Arial', 24))

dadosNaoEncontrados = [
        [sg.Text("Dados não reconhecidos", font=('Arial', 36))],
        [sg.Button("Voltar"),sg.Button("Sair")]]

janelaDadosNaoEncontrados = sg.Window("Projeto de ATP", dadosNaoEncontrados, location=(300,150), font=('Arial', 24))

#Pesquisar por:

pesquisarPor = [
        [sg.Text('Pesquisar por:')],
        [sg.Listbox(values=sg.theme_list(), size=(20, 12), key='-LIST-', enable_events=True)],
        [sg.Button("Procurar"),sg.Button("Voltar"),sg.Button("Sair")]
]
janelaPesquisarPor = sg.Window("Projeto de ATP", pesquisarPor, location=(300,150), font=('Arial', 24))


# funcao para criar o cartao de informacoes da pessoa

def janelaUtilizador(pessoa):
    nome,idade,morada,bi,descricao,profissao,partidopolitico,religiao,desportos,animais,figurapublica,marcacarro,destinosfavoritos = pessoa
    utilizador = [
        [sg.Text('Nome:',nome)],
        [sg.Text('Idade:',idade)],
        [sg.Text('Morada:',morada)],  #["cidade"]],", ",pessoa["morada"["distrito"]])
        [sg.Text('BI/CC:',bi)],
        [sg.Text('Descrição:',descricao)],
        [sg.Text('Profissão:',profissao)],
        [sg.Text('Partido:',partidopolitico)],  #["party_abbr"]]," - ",pessoa['partido_politico'["party_name"]])
        [sg.Text('Religião:',religiao)],
        [sg.Text('Desportos:',desportos)],
        [sg.Text('Animais:',animais)],
        [sg.Text('Figuras Públicas:',figurapublica)],
        [sg.Text('Marca do Carro:',marcacarro)],
        [sg.Text('Destinos Favoritos:',destinosfavoritos)],
        #[sg.Text('Comida Favorita:', pessoa["comida_favorita"])],    ESTÁ NO DICIONARIO DOS ATRIBUTOS
        [sg.Button("Voltar"),sg.Button("Sair")]
    ]
    janelaUtilizador = sg.Window("Projeto de ATP", utilizador, location=(300,150), font=('Arial', 24)).read()


while True:
      
    event,values = janelaMenuInicial.read()
    if event == "OK1":
        while True:
            event,values = janelaInserirUtilizador.read()      

            if event == sg.WIN_CLOSED or event == 'Sair':
                break

            elif event == "Voltar":
                janelaInserirUtilizador.close() 

            elif event == "Submeter":
                novoUtilizador = {}
                novoUtilizador['nome'] = values['-NOME-']
                novoUtilizador['idade'] = values['-IDADE-']
                novoUtilizador['cidade'] = values['-LOCALIDADE-']
                novoUtilizador['distrito'] = values['-DISTRITO-']
                novoUtilizador['BI'] = values['-CCBI-']
                novoUtilizador['descrição'] = values['-DESCRICAO-']
                novoUtilizador['profissao'] = values['-PROFISSAO-']              ###################################
                novoUtilizador['party_name'] = values['-EXTENSO-']               #### FALTA ADICIONAR ATRIBUTOS ####
                novoUtilizador['party_abbr'] = values['-SIGLA-']                 ###################################
                novoUtilizador['religiao'] = values['-RELIGIAO-']
                novoUtilizador['desportos'] = values['-DESPORTOS-']
                novoUtilizador['animais'] = values['-ANIMAIS-']
                novoUtilizador['figura_publica_pt'] = values['-CELEBRIDADE-']
                novoUtilizador['marca_carro'] = values['-CARRO-']
                novoUtilizador['destinos_favoritos'] = values['-DESTINOS-']
                novoUtilizador['comida_favorita'] = values['-COMIDA-']

                    
                if novoUtilizador['nome'] == "" or novoUtilizador['idade'] == "" or novoUtilizador['cidade'] == "" or novoUtilizador['distrito'] == "" or novoUtilizador['BI'] == "" or novoUtilizador['profissao'] == "":
                    event,_ = janelaOperacaoInvalida.read()
                    
                    if event == "Voltar":
                        janelaOperacaoInvalida.close() 
                    if event == sg.WIN_CLOSED or event == 'Sair':
                        exit()     
                        
                else:                 
                    registo = {'nome': novoUtilizador['nome'], 'idade': int(novoUtilizador['idade']),
                    'sexo': 'outro', 'morada': {'cidade': novoUtilizador['cidade'], 'distrito': novoUtilizador['distrito']}, 
                    'BI': novoUtilizador['BI'], 'descrição':  novoUtilizador['descrição'], 
                    'profissao': novoUtilizador['profissao'], 
                    'partido_politico': {'party_abbr':  novoUtilizador['party_name'], 'party_name': novoUtilizador['party_abbr']}, 
                    'religiao': novoUtilizador['religiao'], 
                    'desportos':  novoUtilizador['desportos'].split(",") ,
                    'animais':    novoUtilizador['animais'].split(","), 
                    'figura_publica_pt':  novoUtilizador['figura_publica_pt'].split(",") , 'marca_carro': novoUtilizador['marca_carro'], 
                    'destinos_favoritos':novoUtilizador['destinos_favoritos'].split(","), 
                    'atributos': {'fumador': False, 'gosta_cinema': False, 'gosta_viajar': True, 'acorda_cedo': True, 'gosta_ler': False, 
                    'gosta_musica': False, 'gosta_comer': True, 'gosta_animais_estimacao': False, 'gosta_dancar': True,
                    'comida_favorita': novoUtilizador['comida_favorita'] }}
                    populacao.append(registo)
                    print("ola")
               

    elif event == "OK2":
        while True:
            event, values = janelaProcurarUtilizador.read()
            if event == 'Nome':           
                event, values =janelaProcurarNome.read()
                if event == "Submeter":
                        for pessoa in populacao:
                            if values['-PROCURARNOME-'] in pessoa["nome"]:
                                print(pessoa["nome"])
                            else:
                                event,values = janelaDadosNaoEncontrados.read()
                                if event == "Voltar":
                                    janelaDadosNaoEncontrados.close()
                                elif event == sg.WIN_CLOSED or event == 'Sair':
                                    break
                elif event == "Voltar":
                    janelaProcurarNome.close()
                elif event == sg.WIN_CLOSED or event == 'Sair':
                    break
            elif event == 'CC/BI':                
                event, values = janelaProcurarCCBI.read()        
                if event == "Submeter":
                        for pessoa in populacao:
                            if values['-PROCURARCCBI-'] in pessoa["BI"]:
                                print(pessoa["nome"])
                            else:
                                event,values = janelaDadosNaoEncontrados.read()
                                if event == "Voltar":
                                    janelaDadosNaoEncontrados.close()
                                elif event == sg.WIN_CLOSED or event == 'Sair':
                                    break
                elif event == "Voltar":
                    janelaProcurarCCBI.close()
                elif event == sg.WIN_CLOSED or event == 'Sair':
                    break
            elif event == "Voltar":
                janelaProcurarUtilizador.close()
            elif event == sg.WIN_CLOSED or event == 'Sair':
                break

    elif event == "OK3":

        listarIndividuos = [
        [sg.Text("Lista de indivíduos presentes na BD:", size=(13,1)),
        sg.Listbox(nomes, size=(20,12),key ='-INDIVIDUO-', select_mode = sg.LISTBOX_SELECT_MODE_SINGLE)],
        [sg.Button("Procurar"),sg.Button("Voltar"),sg.Button("Sair")]
        ]
        
        janelaListarIndividuos = sg.Window("Projeto de ATP", listarIndividuos, location=(300,150), font=('Arial', 24))

        while True:
            event, values = janelaListarIndividuos.read()
        
            if event == "Procurar":
                print("hello")
            elif event == sg.WIN_CLOSED or event == 'Sair':
                break
            elif event == "Voltar":
                janelaListarIndividuos.close()

    elif event == "OK4":
        while True:
            event, values = janelaPesquisarPor.read()
        
            if event == "Procurar":
                print("hello")
            elif event == sg.WIN_CLOSED or event == 'Sair':
                break
            elif event == "Voltar":
                janelaPesquisarPor.close()

    elif event == "OK5":
        pass

    elif event == sg.WIN_CLOSED or event == 'Sair':
        break
        

