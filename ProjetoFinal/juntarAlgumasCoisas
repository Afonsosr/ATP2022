import PySimpleGUI as sg
import json
import matplotlib.pyplot as plt

with open("dataset.json", encoding='utf-8') as dataset:
    populacao = json.load(dataset)

#listas
populacao = populacao["pessoas"]

nomes = []
for pessoa in populacao:
    nomes.append(pessoa["nome"])
nomes = sorted(nomes)

DatasetsExtra = ["Dataset extra 1","Dataset extra 2","Dataset extra 3"]

#distribuicoes do tipo: {caracteristica:[nomes de quem as tem]}
distribReligião = {}
for pessoa in populacao:
    if 'religiao' in pessoa.keys():
        if pessoa["religiao"] not in distribReligião:
            distribReligião[pessoa["religiao"]] = [pessoa["nome"]]
        else:
            distribReligião[pessoa["religiao"]].append(pessoa["nome"])

distribDesporto= {}
for pessoa in populacao:
    if 'desportos' in pessoa.keys():
        for desporto in pessoa["desportos"]:
            if desporto not in distribDesporto:
                distribDesporto[desporto] = [pessoa["nome"]]
            else:
                distribDesporto[desporto].append(pessoa["nome"])

distribPartido = {}
for pessoa in populacao:
        if pessoa['partido_politico']['party_name'] not in distribPartido:
            distribPartido[pessoa['partido_politico']['party_name']] = [pessoa["nome"]]
        else:
            distribPartido[pessoa['partido_politico']['party_name']].append(pessoa["nome"])

distribDistrito = {}
for pessoa in populacao:
        if pessoa['morada']['distrito'] not in distribDistrito:
            distribDistrito[pessoa['morada']['distrito']] = [pessoa["nome"]]
        else:
            distribDistrito[pessoa['morada']['distrito']].append(pessoa["nome"])

#tema
sg.theme("DarkBrown3")

#menu inicial
menuInicial = [ 
    [sg.Text("Estudo da População", font=('Arial', 36))],
    [sg.Text("MENU", font=('Arial', 36))],
    [sg.Text("Inserir Utilizador:", size=(20,1)),sg.Button("OK1")],
    [sg.Text("Procurar Utilizador:", size=(20,1)), sg.Button("OK2")],
    [sg.Text("Listar Indivíduos:", size=(20,1)), sg.Button("OK3")],
    [sg.Text("Pesquisa Por:", size=(20,1)), sg.Button("OK4")],
    [sg.Text("Menu Estatístico:", size=(20,1)), sg.Button("OK5")],
    [sg.Text("Adicionar Novos Datasets:", size=(20,1)), sg.Button("OK6")],
    [sg.Button("Sair")]
]
janelaMenuInicial = sg.Window("Projeto de ATP", menuInicial, location=(300,150), font=('Arial', 24))

# inserir utilizador
inserirUtilizadorEsquerda = [
    [sg.Text("Introdução de Utilizador", font=('Arial', 36))],
    [sg.Text("Nome:",font=(20), size=(15,1)),sg.InputText(key="-NOME-",size=(20),do_not_clear=False)],
    [sg.Text("Idade:",font=(20), size=(15,1)),sg.InputText(key='-IDADE-',size=(20),do_not_clear=False)],
    [sg.Text("Género:",font=(20), size=(8,1)), sg.Radio("Masculino","sexo",default=True),
            sg.Radio("Feminino","sexo"),
            sg.Radio("Outro","sexo")],
    [sg.Text("Morada", font=('Arial', 15))],
    [sg.Text("Localidade:",font=(20), size=(15,1)),sg.InputText(key='-LOCALIDADE-',size=(20),do_not_clear=False)],
    [sg.Text("Distrito:",font=(20), size=(15,1)),sg.InputText(key='-DISTRITO-',size=(20),do_not_clear=False)],
    [sg.Text("Nº CC/BI:",font=(20), size=(15,1)),sg.InputText(key='-CCBI-',size=(20),do_not_clear=False)],
    [sg.Text("Descrição:",font=(20), size=(15,1)),sg.InputText(key='-DESCRICAO-',size=(20),do_not_clear=False)],
    [sg.Text("Profissão:",font=(20), size=(15,1)),sg.InputText(key='-PROFISSAO-',size=(20),do_not_clear=False)],
    [sg.Text("Partido Político", font=('Arial', 15))],  
    [sg.Text("Nome por Extenso:",font=(20), size=(15,1)),sg.InputText(key='-EXTENSO-',size=(20),do_not_clear=False)],
    [sg.Text("Sigla:",font=(20), size=(15,1)),sg.InputText(key='-SIGLA-',size=(20),do_not_clear=False)],
    [sg.Text("Religião:",font=(20), size=(15,1)),sg.InputText(key='-RELIGIAO-',size=(20),do_not_clear=False)],
    [sg.Text("Desportos Praticados:",font=(20), size=(15,1)),sg.InputText(key='-DESPORTOS-',size=(20),do_not_clear=False)],
]
inserirUtilizadorDireita = [
    [sg.Text("Celebridades Favoritas:",font=(20), size=(15,1)),sg.InputText(key='-CELEBRIDADE-',size=(20),do_not_clear=False)],
    [sg.Text("Marca Carro:",font=(20), size=(15,1)),sg.InputText(key='-CARRO-',size=(20),do_not_clear=False)],
    [sg.Text("Destino Favorito:",font=(20), size=(15,1)),sg.InputText(key='-DESTINOS-',size=(20),do_not_clear=False)],
    [sg.Text("Animais Favoritos:",font=(20), size=(15,1)),sg.InputText(key='-ANIMAIS-',size=(20),do_not_clear=False)],
    [sg.Text("Atributos", font=('Arial', 15))],
        [sg.Text("Fuma?:",font=(20), size=(15,1)), sg.Radio("Sim","fuma",default=True),
            sg.Radio("Não","fuma")],
        [sg.Text("Gosta de cinema?:",font=(20), size=(15,1)), sg.Radio("Sim","cinema",default=True),
            sg.Radio("Não","cinema")],
        [sg.Text("Gosta de viajar?:",font=(20), size=(15,1)), sg.Radio("Sim","viagem",default=True),
            sg.Radio("Não","viagem")],
        [sg.Text("Acorda cedo?:",font=(20), size=(15,1)), sg.Radio("Sim","acordarcedo",default=True),
            sg.Radio("Não","acordarcedo")],
        [sg.Text("Gosta de ler?:",font=(20), size=(15,1)), sg.Radio("Sim","ler",default=True),
            sg.Radio("Não","ler")],
        [sg.Text("Gosta de música?:",font=(20), size=(15,1)), sg.Radio("Sim","musica",default=True),
            sg.Radio("Não","musica")],
        [sg.Text("Gosta de comer?:",font=(20), size=(15,1)), sg.Radio("Sim","comer",default=True),
            sg.Radio("Não","comer")],
        [sg.Text("Gosta de dançar?:",font=(20), size=(15,1)), sg.Radio("Sim","dancar",default=True),
            sg.Radio("Não","dancar")],
        [sg.Text("Gosta de animais de estimação?:",font=(20), size=(15,1)), sg.Radio("Sim","pets",default=True),
            sg.Radio("Não","pets")],
    [sg.Text("Comida Favorita:",font=(20), size=(15,1)),sg.InputText(key='-COMIDA-',size=(20),do_not_clear=False)]
]
inserirUtilizador = [
    [sg.Col(inserirUtilizadorEsquerda, p=0), sg.Col(inserirUtilizadorDireita, p=0)],
    [sg.Button("Submeter"),sg.Button("Voltar"),sg.Button("Sair")]
]
janelaInserirUtilizador = sg.Window("Projeto de ATP", inserirUtilizador, location=(100,0), font=('Arial', 24))

#operacao inserir utilizador invalida
operacaoInvalida = [ 
    [sg.Text("Operação inválida", font=('Arial', 36))],
    [sg.Text("Os campos NOME,IDADE,LOCALIDADE,DISTRITO,CCBI e PROFISSAO tem que estar preenchidos.", font=('Arial', 20))],
    [sg.Button("Voltar")],
    [sg.Button("Sair")]
]


janelaOperacaoInvalida = sg.Window("Projeto de ATP", operacaoInvalida, location=(150,200), font=('Arial', 24))

#insercao feita com sucesso
operacaoSucesso = [ 
    [sg.Text("Utilizador inserido com sucesso.", font=('Arial', 20))],
    [sg.Button("Voltar")],
    [sg.Button("Sair")]
]


janelaOperacaoSucesso = sg.Window("Projeto de ATP", operacaoSucesso, location=(150,200), font=('Arial', 24))





#Distribuição dos indivíduos por desporto
def distribuição_desporto(populacao):
    distrib = {}
    for pessoa in populacao:
        for sport in pessoa['desportos']:
            if sport in distrib.keys():
                distrib[sport] = distrib[sport] + 1
            else:
                distrib[sport] = 1
    return distrib
#Distribuição dos indivíduos por animais
def distribuição_animais(populacao):
    distrib = {}
    for pessoa in populacao:
        for animal in pessoa['animais']:
            if animal in distrib.keys():
                distrib[animal] = distrib[animal] + 1
            else:
                distrib[animal] = 1
    return distrib
#Distribuição dos indivíduos por figura publica
def distribuição_figuraPublica(populacao):
    distrib = {}
    for pessoa in populacao:
        for celebridade in pessoa['figura_publica_pt']:
            if celebridade in distrib.keys():
                distrib[celebridade] = distrib[celebridade] + 1
            else:
                distrib[celebridade] = 1
    return distrib
#Distribuição dos indivíduos por destinos favoritos
def distribuição_destinosFavoritos(populacao):
    distrib = {}
    for pessoa in populacao:
        for destino in pessoa['destinos_favoritos']:
            if destino in distrib.keys():
                distrib[destino] = distrib[destino] + 1
            else:
                distrib[destino] = 1
    return distrib
#Distribuição dos indivíduos por religiao
def distribuição_religiao(populacao):
    distrib = {}
    for pessoa in populacao:
        if 'religiao' in pessoa.keys():
            if pessoa["religiao"] in distrib.keys():
                distrib[pessoa["religiao"]] = distrib[pessoa["religiao"]] + 1
            else:
                distrib[pessoa["religiao"]] = 1
    return distrib
#Distribuição dos indivíduos por profissao

def distribuição_profissao(populacao):
    distrib = {}
    for pessoa in populacao:
        if pessoa["profissao"] in distrib.keys():
            distrib[pessoa["profissao"]] += 1
        else:
            distrib[pessoa["profissao"]] = 1
    return distrib

   #Top 10
def ordenaValores(v):
    return v[1]

def top10(distrib):
    valores = list(distrib.items())
    valores.sort(key = ordenaValores)
    novaDistrib = dict(valores[-10:])
    return novaDistrib

#Gráficos das distribuições
def plotdistrib(distrib):
    plt.plot(distrib.keys(), distrib.values())
    plt.xticks([x for x in range(0, len(distrib.keys()))], distrib.keys(), rotation = 45)
    plt.title("Distribuição dos indivíduos - TOP 10")
    plt.show()
    return



# funcao para criar o cartao de informacoes da pessoa

def janelaUtilizador(pessoa):
    utilizador = [
        [sg.Text('Nome:',pessoa["nome"])],
        [sg.Text('Idade:',pessoa['idade'])],
        [sg.Text('Sexo:',pessoa['sexo'])],
        [sg.Text('Morada:',pessoa['morada']['cidade'] +", " +pessoa['morada']['distrito'])],  #["cidade"]],", ",pessoa["morada"["distrito"]])
        [sg.Text('BI/CC:',pessoa['CC'])],
        [sg.Text('Descrição:',['descrição'])],
        [sg.Text('Profissão:',pessoa['profissao'])],
        [sg.Text('Partido:',pessoa['partido_politico']['party_abbr'] +" - " +pessoa['partido_politico']['party_name'])],  #["party_abbr"]]," - ",pessoa['partido_politico'["party_name"]])
        [sg.Text('Religião:',pessoa['religiao'])],
        [sg.Text('Desportos:',pessoa['desportos'])],
        [sg.Text('Animais:',pessoa['animais'])],
        [sg.Text('Figuras Públicas:',pessoa['figura_publica_pt'])],
        [sg.Text('Marca do Carro:',pessoa['marca_carro'])],
        [sg.Text('Destinos Favoritos:',pessoa['destinos_favoritos'])],
        [sg.Text('Comida Favorita:', pessoa['atributos']["comida_favorita"])],  
    ]
    janelaUtilizador = sg.Window("Projeto de ATP", utilizador, location=(300,150), font=('Arial', 24))
    janelaUtilizador.read()


while True:
    
    #menu inicial
    menuInicial = [ 
    [sg.Text("Estudo da População", font=('Arial', 36))],
    [sg.Text("MENU", font=('Arial', 36))],
    [sg.Text("Inserir Utilizador:", size=(20,1)),sg.Button("OK1")],
    [sg.Text("Procurar Utilizador:", size=(20,1)), sg.Button("OK2")],
    [sg.Text("Listar Indivíduos:", size=(20,1)), sg.Button("OK3")],
    [sg.Text("Pesquisa Por:", size=(20,1)), sg.Button("OK4")],
    [sg.Text("Menu Estatístico:", size=(20,1)), sg.Button("OK5")],
    [sg.Text("Adicionar Novos Datasets:", size=(20,1)), sg.Button("OK6")],
    [sg.Button("Sair")]
    ]
    janelaMenuInicial = sg.Window("Projeto de ATP", menuInicial, location=(300,150), font=('Arial', 24))

    
    event,values = janelaMenuInicial.read()
    if event == "OK1":
        
        # inserir utilizador
        inserirUtilizadorEsquerda = [
            [sg.Text("Introdução de Utilizador", font=('Arial', 36))],
            [sg.Text("Nome:",font=(20), size=(15,1)),sg.InputText(key="-NOME-",size=(20),do_not_clear=False)],
            [sg.Text("Idade:",font=(20), size=(15,1)),sg.InputText(key='-IDADE-',size=(20),do_not_clear=False)],
            [sg.Text("Género:",font=(20), size=(8,1)), sg.Radio("Masculino","sexo",key="-MASC-",default=True),
                    sg.Radio("Feminino","sexo",key="-FEM-"),
                    sg.Radio("Outro","sexo")],
            [sg.Text("Morada", font=('Arial', 15))],
            [sg.Text("Localidade:",font=(20), size=(15,1)),sg.InputText(key='-LOCALIDADE-',size=(20),do_not_clear=False)],
            [sg.Text("Distrito:",font=(20), size=(15,1)),sg.InputText(key='-DISTRITO-',size=(20),do_not_clear=False)],
            [sg.Text("Nº CC/BI:",font=(20), size=(15,1)),sg.InputText(key='-CCBI-',size=(20),do_not_clear=False)],
            [sg.Text("Descrição:",font=(20), size=(15,1)),sg.InputText(key='-DESCRICAO-',size=(20),do_not_clear=False)],
            [sg.Text("Profissão:",font=(20), size=(15,1)),sg.InputText(key='-PROFISSAO-',size=(20),do_not_clear=False)],
            [sg.Text("Partido Político", font=('Arial', 15))],  
            [sg.Text("Nome por Extenso:",font=(20), size=(15,1)),sg.InputText(key='-EXTENSO-',size=(20),do_not_clear=False)],
            [sg.Text("Sigla:",font=(20), size=(15,1)),sg.InputText(key='-SIGLA-',size=(20),do_not_clear=False)],
            [sg.Text("Religião:",font=(20), size=(15,1)),sg.InputText(key='-RELIGIAO-',size=(20),do_not_clear=False)],
            [sg.Text("Desportos Praticados:",font=(20), size=(15,1)),sg.InputText(key='-DESPORTOS-',size=(20),do_not_clear=False)],
        ]
        inserirUtilizadorDireita = [
            [sg.Text("Celebridades Favoritas:",font=(20), size=(15,1)),sg.InputText(key='-CELEBRIDADE-',size=(20),do_not_clear=False)],
            [sg.Text("Marca Carro:",font=(20), size=(15,1)),sg.InputText(key='-CARRO-',size=(20),do_not_clear=False)],
            [sg.Text("Destino Favorito:",font=(20), size=(15,1)),sg.InputText(key='-DESTINOS-',size=(20),do_not_clear=False)],
            [sg.Text("Animais Favoritos:",font=(20), size=(15,1)),sg.InputText(key='-ANIMAIS-',size=(20),do_not_clear=False)],
            [sg.Text("Atributos", font=('Arial', 15))],
                [sg.Text("Fuma?:",font=(20), size=(15,1)), sg.Radio("Sim","fuma",key="-FUMA-",default=True),
                    sg.Radio("Não","fuma")],
                [sg.Text("Gosta de cinema?:",font=(20), size=(15,1)), sg.Radio("Sim","cinema",key="-CINEMA-",default=True),
                    sg.Radio("Não","cinema")],
                [sg.Text("Gosta de viajar?:",font=(20), size=(15,1)), sg.Radio("Sim","viagem",key="-VIAGENS-",default=True),
                    sg.Radio("Não","viagem")],
                [sg.Text("Acorda cedo?:",font=(20), size=(15,1)), sg.Radio("Sim","acordarcedo",key="-ACORCEDO-",default=True),
                    sg.Radio("Não","acordarcedo")],
                [sg.Text("Gosta de ler?:",font=(20), size=(15,1)), sg.Radio("Sim","ler",key="-GOSTLER-",default=True),
                    sg.Radio("Não","ler")],
                [sg.Text("Gosta de música?:",font=(20), size=(15,1)), sg.Radio("Sim","musica",key="-GOSTMUSIC-",default=True),
                    sg.Radio("Não","musica")],
                [sg.Text("Gosta de comer?:",font=(20), size=(15,1)), sg.Radio("Sim","comer",key="-GOSTCOM-",default=True),
                    sg.Radio("Não","comer")],
                [sg.Text("Gosta de dançar?:",font=(20), size=(15,1)), sg.Radio("Sim","dancar",key="-GOSTDANC-",default=True),
                    sg.Radio("Não","dancar")],
                [sg.Text("Gosta de animais de estimação?:",font=(20), size=(15,1)), sg.Radio("Sim","pets",key="-PETS-",default=True),
                    sg.Radio("Não","pets")],
            [sg.Text("Comida Favorita:",font=(20), size=(15,1)),sg.InputText(key='-COMIDA-',size=(20),do_not_clear=False)]
        ]
        inserirUtilizador = [
            [sg.Col(inserirUtilizadorEsquerda, p=0), sg.Col(inserirUtilizadorDireita, p=0)],
            [sg.Button("Submeter"),sg.Button("Voltar"),sg.Button("Sair")]
        ]
        janelaInserirUtilizador = sg.Window("Projeto de ATP", inserirUtilizador, location=(100,0), font=('Arial', 24))


        while True:
            event,values = janelaInserirUtilizador.read()      

            if event == sg.WIN_CLOSED or event == 'Sair':
                break

            elif event == "Voltar":
                janelaInserirUtilizador.close() 

            elif event == "Submeter":
                novoUtilizador = {}
                novoUtilizador['nome'] = values['-NOME-']
                novoUtilizador['idade'] = values['-IDADE-']
                novoUtilizador['cidade'] = values['-LOCALIDADE-']
                novoUtilizador['distrito'] = values['-DISTRITO-']
                novoUtilizador['BI'] = values['-CCBI-']
                novoUtilizador['descrição'] = values['-DESCRICAO-']
                novoUtilizador['profissao'] = values['-PROFISSAO-']              ###################################
                novoUtilizador['party_name'] = values['-EXTENSO-']               #### FALTA ADICIONAR ATRIBUTOS ####
                novoUtilizador['party_abbr'] = values['-SIGLA-']                 ###################################
                novoUtilizador['religiao'] = values['-RELIGIAO-']
                novoUtilizador['desportos'] = values['-DESPORTOS-']
                novoUtilizador['animais'] = values['-ANIMAIS-']
                novoUtilizador['figura_publica_pt'] = values['-CELEBRIDADE-']
                novoUtilizador['marca_carro'] = values['-CARRO-']
                novoUtilizador['destinos_favoritos'] = values['-DESTINOS-']
                novoUtilizador['comida_favorita'] = values['-COMIDA-']
                
                if values["-MASC-"] == False:
                    if values["-FEM-"] == False:
                        novoUtilizador['sexo'] = "outro"
                    else:
                        novoUtilizador['sexo'] = "feminino"
                else:
                    novoUtilizador['sexo'] = "masculino"
                
                if values['-FUMA-'] == True:
                    novoUtilizador['fumador'] = True
                else:
                    novoUtilizador['fumador'] = False
                if values['-CINEMA-'] == True:
                    novoUtilizador['gosta_cinema'] = True
                else:
                    novoUtilizador['gosta_cinema'] = False
                if values['-VIAGENS-'] == True:
                    novoUtilizador['gosta_viajar'] = True
                else:
                    novoUtilizador['gosta_viajar'] = False
                if values['-ACORCEDO-'] == True:
                    novoUtilizador['acorda_cedo'] = True
                else:
                    novoUtilizador['acorda_cedo'] = False
                if values['-GOSTLER-'] == True:
                    novoUtilizador['gosta_ler'] = True
                else:
                    novoUtilizador[ 'gosta_ler'] = False
                if values['-GOSTMUSIC-'] == True:
                    novoUtilizador['gosta_musica'] = True
                else:
                    novoUtilizador['gosta_musica'] = False
                if values['-GOSTCOM-'] == True:
                    novoUtilizador['gosta_comer'] = True
                else:
                    novoUtilizador['gosta_comer'] = False
                if values['-PETS-'] == True:
                    novoUtilizador[ 'gosta_animais_estimacao'] = True
                else:
                    novoUtilizador[ 'gosta_animais_estimacao'] = False
                if values['-GOSTDANC-'] == True:
                    novoUtilizador['gosta_dancar'] = True
                else:
                    novoUtilizador['gosta_dancar'] = False
    

                if novoUtilizador['nome'] == "" or novoUtilizador['idade'] == "" or novoUtilizador['cidade'] == "" or novoUtilizador['distrito'] == "" or novoUtilizador['BI'] == "" or novoUtilizador['profissao'] == "":
                            #operacao inserir utilizador invalida
                    operacaoInvalida = [ 
                        [sg.Text("Operação inválida", font=('Arial', 36))],
                        [sg.Text("Os campos NOME,IDADE,LOCALIDADE,DISTRITO,CCBI e PROFISSAO tem que estar preenchidos.", font=('Arial', 20))],
                        [sg.Button("Voltar")],
                        [sg.Button("Sair")]
                    ]
                    janelaOperacaoInvalida = sg.Window("Projeto de ATP", operacaoInvalida, location=(150,200), font=('Arial', 24))
                    
                    event,_ = janelaOperacaoInvalida.read()
                    
                    if event == "Voltar":
                        janelaOperacaoInvalida.close() 
                    if event == sg.WIN_CLOSED or event == 'Sair':
                        exit()     
                            
                else:                 
                    registo = {'nome': novoUtilizador['nome'], 'idade': int(novoUtilizador['idade']),
                    'sexo': novoUtilizador['sexo'], 'morada': {'cidade': novoUtilizador['cidade'], 'distrito': novoUtilizador['distrito']}, 
                    'BI': novoUtilizador['BI'], 'descrição':  novoUtilizador['descrição'], 
                    'profissao': novoUtilizador['profissao'], 
                    'partido_politico': {'party_abbr':  novoUtilizador['party_name'], 'party_name': novoUtilizador['party_abbr']}, 
                    'religiao': novoUtilizador['religiao'], 
                    'desportos':  novoUtilizador['desportos'].split(",") ,
                    'animais':    novoUtilizador['animais'].split(","), 
                    'figura_publica_pt':  novoUtilizador['figura_publica_pt'].split(",") , 'marca_carro': novoUtilizador['marca_carro'], 
                    'destinos_favoritos':novoUtilizador['destinos_favoritos'].split(","), 
                    'atributos': {'fumador': novoUtilizador['fumador'], 'gosta_cinema': novoUtilizador['gosta_cinema'], 'gosta_viajar': novoUtilizador['gosta_viajar'], 'acorda_cedo': novoUtilizador['acorda_cedo'], 'gosta_ler': novoUtilizador['gosta_ler'], 
                    'gosta_musica': novoUtilizador['gosta_musica'], 'gosta_comer': novoUtilizador['gosta_comer'], 'gosta_animais_estimacao': novoUtilizador[ 'gosta_animais_estimacao'], 'gosta_dancar': novoUtilizador['gosta_dancar'],
                    'comida_favorita': novoUtilizador['comida_favorita'] }}
                    populacao.append(registo)
                    print(registo)

                    event,_ = janelaOperacaoSucesso.read()                   
                    if event == "Voltar":
                        janelaOperacaoSucesso.close() 
                    if event == sg.WIN_CLOSED or event == 'Sair':
                        exit()  
               

    elif event == "OK2":

        #procurar utilizador

        procurarUtilizador = [
            [sg.Text("Introdução de Utilizador", font=('Arial', 36))],
            [sg.Text("Pesquisa por Nome:", size=(18,1)),sg.Button("Nome")],
            [sg.Text("Pesquisa por Nº CC/BI:", size=(18,1)),sg.Button("CC/BI")],
            [sg.Button("Voltar"),sg.Button("Sair")]
        ]

        janelaProcurarUtilizador = sg.Window("Projeto de ATP", procurarUtilizador, location=(300,150), font=('Arial', 24))

        procurarNome = [
            [sg.Text("Nome:", size=(18,1)),sg.InputText(key='-PROCURARNOME-',size=(20))],
            [sg.Button("Procurar"),sg.Button("Voltar"),sg.Button("Sair")]
        ]
        janelaProcurarNome = sg.Window("Projeto de ATP", procurarNome, location=(300,150), font=('Arial', 24))

        procurarCCBI = [
            [sg.Text("Número do CC/BI:", size=(18,1)),sg.InputText(key='-PROCURARCCBI-',size=(20))],
            [sg.Button("Procurar"),sg.Button("Voltar"),sg.Button("Sair")]
        ]
        janelaProcurarCCBI = sg.Window("Projeto de ATP", procurarCCBI, location=(300,150), font=('Arial', 24))

        dadosNaoEncontrados = [
                [sg.Text("Dados não reconhecidos", font=('Arial', 36))],
                [sg.Button("Voltar"),sg.Button("Sair")]]

        janelaDadosNaoEncontrados = sg.Window("Projeto de ATP", dadosNaoEncontrados, location=(300,150), font=('Arial', 24))

        while True:
            event,_ = janelaProcurarUtilizador.read()
            if event == 'Nome':
                while True:           
                    event, values =janelaProcurarNome.read()
                    if event == "Procurar":
                        n = 0
                        for pessoa in populacao:
                            if values['-PROCURARNOME-'] in pessoa["nome"]:
                                n += 1
                                print(pessoa["nome"])
                        if n == 0:
                            event,values = janelaDadosNaoEncontrados.read()
                            if event == "Voltar":
                                janelaDadosNaoEncontrados.close()
                            elif event == sg.WIN_CLOSED or event == 'Sair':
                                break
                    elif event == "Voltar":
                        janelaProcurarNome.close()
                    elif event == sg.WIN_CLOSED or event == 'Sair':
                        break
            elif event == 'CC/BI':  
                while True:              
                    event, values = janelaProcurarCCBI.read()        
                    if event == "Procurar":
                        n = 0
                        for pessoa in populacao:
                            if 'BI' in pessoa.keys():
                                if values['-PROCURARCCBI-'] in pessoa["BI"]:
                                    n += 1
                                    print(pessoa["nome"] +" ::: "+pessoa["BI"])
                            elif "CC" in pessoa.keys():
                                if values['-PROCURARCCBI-'] in pessoa["CC"]:
                                    n += 1
                                    print(pessoa["nome"] +" ::: "+pessoa["CC"])
                        if n == 0:
                            event,values = janelaDadosNaoEncontrados.read()
                            if event == "Voltar":
                                janelaDadosNaoEncontrados.close()
                            elif event == sg.WIN_CLOSED or event == 'Sair':
                                break
                    elif event == "Voltar":
                        janelaProcurarCCBI.close()
                    elif event == sg.WIN_CLOSED or event == 'Sair':
                        break
            elif event == "Voltar":
                janelaProcurarUtilizador.close()
            elif event == sg.WIN_CLOSED or event == 'Sair':
                break

    elif event == "OK3":

        frase = f"Número de indivíduos em análise: " + str(len(nomes))
        listarIndividuos = [
        [sg.Text("Lista de indivíduos presentes na BD:", size=(30,1)),
        sg.Listbox(nomes, size=(20,12),key ='-INDIVIDUO-', select_mode = sg.LISTBOX_SELECT_MODE_SINGLE)],
        [sg.Text(frase)],
        [sg.Button("Procurar"),sg.Button("Voltar"),sg.Button("Sair")]
        ]
        
        janelaListarIndividuos = sg.Window("Projeto de ATP", listarIndividuos, location=(300,150), font=('Arial', 24))

        while True:
            event, values = janelaListarIndividuos.read()
        
            if event == "Procurar":
                print("hello")
            elif event == sg.WIN_CLOSED or event == 'Voltar':
                break
            elif event == "Voltar":
                janelaListarIndividuos.close()

    elif event == "OK4":
#janelas desta opcao do menu
        pesquisarPor = [
        [sg.Text('Pesquisar por:')],
        [sg.Combo(["Religião","Desporto","Partido Político","Distrito"], size=(20,6),key ='-PESQUISAPOR-')],
        [sg.Button("Procurar"),sg.Button("Voltar"),sg.Button("Sair")]
        ]

        janelaPesquisarPor = sg.Window("Projeto de ATP", pesquisarPor, location=(300,150), font=('Arial', 24))
        
        pesquisarPorReligiao = [
        [sg.Text('Religiões:')],
        [sg.Combo(sorted(distribReligião.keys()), size=(20,6),key ='-PESQUISAPORRELIGIAO-')],
        [sg.Button("Procurar"),sg.Button("Voltar"),sg.Button("Sair")]
        ]
        janelaPesquisarPorReligiao = sg.Window("Projeto de ATP", pesquisarPorReligiao, location=(300,150), font=('Arial', 24))
        
        pesquisarPorDesporto = [
        [sg.Text('Desportos:')],
        [sg.Combo(sorted(distribDesporto.keys()), size=(20,6),key ='-PESQUISAPORDESPORTO-')],
        [sg.Button("Procurar"),sg.Button("Voltar"),sg.Button("Sair")]
        ]
        janelaPesquisarPorDesporto = sg.Window("Projeto de ATP", pesquisarPorDesporto, location=(300,150), font=('Arial', 24))

        pesquisarPorPartido = [
        [sg.Text('Partidos:')],
        [sg.Combo(sorted(distribPartido.keys()), size=(20,6),key ='-PESQUISAPORPARTIDO-')],
        [sg.Button("Procurar"),sg.Button("Voltar"),sg.Button("Sair")]
        ]
        janelaPesquisarPorPartido = sg.Window("Projeto de ATP", pesquisarPorPartido, location=(300,150), font=('Arial', 24))

        pesquisarPorDistrito = [
        [sg.Text('Distritos:')],
        [sg.Combo(sorted(distribDistrito.keys()), size=(20,6),key ='-PESQUISAPORDISTRITO-')],
        [sg.Button("Procurar"),sg.Button("Voltar"),sg.Button("Sair")]
        ]
        janelaPesquisarPorDistrito = sg.Window("Projeto de ATP", pesquisarPorDistrito, location=(300,150), font=('Arial', 24))


#janela com lista de pessoas        
        def janelaComListaDePessoas(a):
            ListaPeople = [
                [sg.Listbox(sorted(a),size=(20,12))],
            ]
            janelaListaPeople = sg.Window("Projeto de ATP", ListaPeople, location=(300,150), font=('Arial', 24))
            janelaListaPeople.read()


        while True:
            event, values = janelaPesquisarPor.read()
            
            if event == "Procurar":
                if values['-PESQUISAPOR-'] == "Religião":
                    while True:
                        event,values = janelaPesquisarPorReligiao.read()
                        if event == "Procurar":
                            chaves = distribReligião.keys()
                            for chave in chaves:
                                if chave == values['-PESQUISAPORRELIGIAO-']:
                                    janelaComListaDePessoas(distribReligião[chave])
                        elif event == sg.WIN_CLOSED or event == 'Sair':
                            break
                        elif event == "Voltar":
                            janelaPesquisarPorReligiao.close()
    
                elif values['-PESQUISAPOR-'] == "Desporto":
                     while True:
                        event,values = janelaPesquisarPorDesporto.read()
                        if event == "Procurar":
                            for chave in distribDesporto:
                                if chave == values['-PESQUISAPORDESPORTO-']:
                                    janelaComListaDePessoas(distribDesporto[chave])
                        elif event == sg.WIN_CLOSED or event == 'Sair':
                            break
                        elif event == "Voltar":
                            janelaPesquisarPorDesporto.close()

                elif values['-PESQUISAPOR-'] == "Partido Político":
                     while True:
                        event,values = janelaPesquisarPorPartido.read()
                        if event == "Procurar":
                            for chave in distribPartido:
                                if chave == values['-PESQUISAPORPARTIDO-']:
                                    janelaComListaDePessoas(distribPartido[chave])
                        elif event == sg.WIN_CLOSED or event == 'Sair':
                            break
                        elif event == "Voltar":
                            janelaPesquisarPorPartido.close()

                elif values['-PESQUISAPOR-'] == "Distrito":
                     while True:
                        event,values = janelaPesquisarPorDistrito.read()
                        if event == "Procurar":
                            for chave in distribDistrito:
                                if chave == values['-PESQUISAPORDISTRITO-']:
                                    janelaComListaDePessoas(distribDistrito[chave])
                        elif event == sg.WIN_CLOSED or event == 'Sair':
                            break
                        elif event == "Voltar":
                            janelaPesquisarPorDistrito.close()

                        
            elif event == sg.WIN_CLOSED or event == 'Sair':
                break
            elif event == "Voltar":
                janelaPesquisarPor.close()

    elif event == "OK5":
        #Menu estatístico

        menuEstatistico = [
        [sg.Text('Gráficos de favoritos:')],
        [sg.Combo(["Animais","Desportos","Destinos Favoritos","Figura Pública","Profissão","Religião"], key='-MENUESTATISTICO-')],
        [sg.Button("Procurar"),sg.Button("Voltar"),sg.Button("Sair")]
        ]
        janelaMenuEstatistico = sg.Window("Projeto de ATP", menuEstatistico, location=(300,150), font=('Arial', 24))
        while True:
            event, values = janelaMenuEstatistico.read()
            if event == "Procurar":
                if values['-MENUESTATISTICO-'] == "Animais":
                    plotdistrib(top10(distribuição_animais(populacao)))
                elif values['-MENUESTATISTICO-'] == "Desportos":
                    plotdistrib(top10(distribuição_desporto(populacao)))
                elif values['-MENUESTATISTICO-'] == "Destinos Favoritos":
                    plotdistrib(top10(distribuição_destinosFavoritos(populacao)))
                elif values['-MENUESTATISTICO-'] == "Figura Pública":
                    plotdistrib(top10(distribuição_figuraPublica(populacao)))
                elif values['-MENUESTATISTICO-'] == "Profissão":
                    plotdistrib(top10(distribuição_profissao(populacao)))
                elif values['-MENUESTATISTICO-'] == "Religião":
                    plotdistrib(top10(distribuição_religiao(populacao)))

            elif event == sg.WIN_CLOSED or event == 'Sair':
                break
            elif event == "Voltar":
                janelaMenuEstatistico.close()

    elif event == "OK6":
        adicionarDatasets = [
        [sg.Text('Adicionar Datasets:')],
        [sg.Combo(DatasetsExtra, key='-ADICIONARDATASETS-')],
        [sg.Button("Adicionar"),sg.Button("Voltar"),sg.Button("Sair")]
        ]
        janelaAdicionarDatasets = sg.Window("Projeto de ATP",adicionarDatasets, location=(300,150), font=('Arial', 24))
        while True:
            event, values = janelaAdicionarDatasets.read()
            if event == "Adicionar":
                if values['-ADICIONARDATASETS-'] == "Dataset extra 1":
                    with open("dataset-extra1.json", encoding='utf-8') as dataset:
                        datasetExtra1 = json.load(dataset)                    
                    datasetExtra1 = datasetExtra1["pessoas"]
                    populacao = populacao + datasetExtra1
                    for pessoa in datasetExtra1:
                        nomes.append(pessoa["nome"])
                    nomes = sorted(nomes)
                    DatasetsExtra.remove("Dataset extra 1")

                elif values['-ADICIONARDATASETS-'] == "Dataset extra 2":
                    with open("dataset-extra2.json", encoding='utf-8') as dataset:
                        datasetExtra2 = json.load(dataset)                    
                    datasetExtra2 = datasetExtra2["pessoas"]
                    populacao = populacao + datasetExtra2
                    for pessoa in datasetExtra2:
                        nomes.append(pessoa["nome"])
                    nomes = sorted(nomes)
                    DatasetsExtra.remove("Dataset extra 2")   

                elif values['-ADICIONARDATASETS-'] == "Dataset extra 3":
                    with open("dataset-extra3.json", encoding='utf-8') as dataset:
                        datasetExtra3 = json.load(dataset)                    
                    datasetExtra3 = datasetExtra3["pessoas"]
                    populacao = populacao + datasetExtra3
                    for pessoa in datasetExtra3:
                        nomes.append(pessoa["nome"])
                    nomes = sorted(nomes)
                    DatasetsExtra.remove("Dataset extra 3")
            
            elif event == sg.WIN_CLOSED or event == 'Sair':
                break
            elif event == "Voltar":
                janelaAdicionarDatasets.close()       

    elif event == sg.WIN_CLOSED or event == 'Sair':
        break
        

